{
	"New Script Include Function (0 Param)": {
		"scope": "typescript",
		"prefix": "yalaClassFunc0",
		"description": "Create a new script include function with Yansa structure and logging standards",
		"body": [
			"/**",
			" * ${1:Description}",
			" * ",
			" * @since ${4:1.0.0}",
			" */",
			"${5:funcName}: function(){",
			"\tvar func = \"${5:funcName}\";",
			"\tthis.logger.info(this.type, func, \"ENTERING\");",
			"\t",
 			"\tvar res;",
			"\t",
			"\ttry{",
			"\t\t",
			"\t\t$0",
			"\t",
			"\t} catch(e){",
			"\t\tthis.logger.reportException(this.type, func, e);",
			"\t\tres = null;",
			"\t} finally {",
			"\t\tthis.logger.info(this.type, func, \"LEAVING\");",
			"\t}",
			"\t",
			"\treturn res;",
			"},"
		]
	},
	"New Script Include Function (1 Param)": {
		"scope": "typescript",
		"prefix": "yalaClassFunc1",
		"description": "Create a new script include function with Yansa structure and logging standards",
		"body": [
			"/**",
			" * ${1:Description}",
			" * @param {${6:TYPE}} ${7:varName} ${8:DESCRIPTION}",
			" * ",
			" * @return {${2:TYPE}} ${3:DESCRIPTION}",
			" * ",
			" * @since ${4:1.0.0}",
			" */",
			"${5:funcName}: function(${7:varName}){",
			"\tvar func = \"${5:funcName}\";",
			"\tthis.logger.info(this.type, func, \"ENTERING\");",
			"\tthis.logger.debug(this.type, func, \"${7:varName}: \" + ${7:varName});",
			"\t",
			"\t/** @type {${2:TYPE}} */",
			"\tvar res;",
			"\t",
			"\ttry{",
			"\t\tif(!${7:varName}) throw new Error(\"Required parameter: '${7:varName}' is missing\");",
			"\t\t",
			"\t\t$0",
			"\t",
			"\t} catch(e){",
			"\t\tthis.logger.reportException(this.type, func, e);",
			"\t\tres = null;",
			"\t} finally {",
			"\t\tthis.logger.info(this.type, func, \"LEAVING\");",
			"\t}",
			"\t",
			"\treturn res;",
			"},"
		]
	},
	"New Script Include Function (2 Param)": {
		"scope": "typescript",
		"prefix": "yalaClassFunc2",
		"description": "Create a new script include function with Yansa structure and logging standards",
		"body": [
			"/**",
			" * ${1:Description}",
			" * @param {${6:TYPE}} ${7:varName} ${8:DESCRIPTION}",
			" * @param {${9:TYPE}} ${10:varName} ${11:DESCRIPTION}",
			" * ",
			" */",
			"${5:funcName}: function(${7:varName},${10:varName}){",
			"\tvar func = \"${5:funcName}\";",
			"\tthis.logger.info(this.type, func, \"ENTERING\");",
			"\tthis.logger.debug(this.type, func, \"${7:varName}: \" + ${7:varName});",
			"\tthis.logger.debug(this.type, func, \"${10:varName}: \" + ${10:varName});",
			"\t",
			"\t/** @type {${2:TYPE}} */",
			"\tvar res;",
			"\t",
			"\ttry{",
			"\t\tif(!${7:varName}) throw new Error(\"Required parameter: '${7:varName}' is missing\");",
			"\t\tif(!${10:varName}) throw new Error(\"Required parameter: '${10:varName}' is missing\");",
			"\t\t",
			"\t\t$0",
			"\t",
			"\t} catch(e){",
			"\t\tthis.logger.reportException(this.type, func, e);",
			"\t\tres = null;",
			"\t} finally {",
			"\t\tthis.logger.info(this.type, func, \"LEAVING\");",
			"\t}",
			"\t",
			"\treturn res;",
			"},"
		]
	},

	"New Script Include Function (3 Params)": {
		"scope": "typescript",
		"prefix": "yalaClassFunc3",
		"description": "Create a new script include function with Yansa structure and logging standards",
		"body": [
			"/**",
			" * ${1:Description}",
			" * @param {${6:TYPE}} ${7:varName} ${8:DESCRIPTION}",
			" * @param {${9:TYPE}} ${10:varName} ${11:DESCRIPTION}",
			" * @param {${12:TYPE}} ${13:varName} ${14:DESCRIPTION}",
			" * ",
			" * @return {${2:TYPE}} ${3:DESCRIPTION}",
			" * ",
			" * @since ${4:1.0.0}",
			" */",
			"${5:funcName}: function(${7:varName},${10:varName},${13:varName}){",
			"\tvar func = \"${5:funcName}\";",
			"\tthis.logger.info(this.type, func, \"ENTERING\");",
			"\tthis.logger.debug(this.type, func, \"${7:varName}: \" + ${7:varName});",
			"\tthis.logger.debug(this.type, func, \"${10:varName}: \" + ${10:varName});",
			"\tthis.logger.debug(this.type, func, \"${13:varName}: \" + ${13:varName});",
			"\t",
			"\t/** @type {${2:TYPE}} */",
			"\tvar res;",
			"\t",
			"\ttry{",
			"\t\tif(!${7:varName}) throw new Error(\"Required parameter: '${7:varName}' is missing\");",
			"\t\tif(!${10:varName}) throw new Error(\"Required parameter: '${10:varName}' is missing\");",
			"\t\tif(!${13:varName}) throw new Error(\"Required parameter: '${13:varName}' is missing\");",
			"\t\t",
			"\t\t$0",
			"\t",
			"\t} catch(e){",
			"\t\tthis.logger.reportException(this.type, func, e);",
			"\t\tres = null;",
			"\t} finally {",
			"\t\tthis.logger.info(this.type, func, \"LEAVING\");",
			"\t}",
			"\t",
			"\treturn res;",
			"},"
		]
	},
	"New Script Include Function (4 Params)": {
		"scope": "typescript",
		"prefix": "yalaClassFunc4",
		"description": "Create a new script include function with Yansa structure and logging standards",
		"body": [
			"/**",
			" * ${1:Description}",
			" * @param {${6:TYPE}} ${7:varName} ${8:DESCRIPTION}",
			" * @param {${9:TYPE}} ${10:varName} ${11:DESCRIPTION}",
			" * @param {${12:TYPE}} ${13:varName} ${14:DESCRIPTION}",
			" * @param {${15:TYPE}} ${16:varName}  ${17:DESCRIPTION}",
			" * ",
			" * @return {${2:TYPE}} ${3:DESCRIPTION}",
			" * ",
			" * @since ${4:1.0.0}",
			" */",
			"${5:funcName}: function(${7:varName},${10:varName},${13:varName},${16:varName}){",
			"\tvar func = \"${5:funcName}\";",
			"\tthis.logger.info(this.type, func, \"ENTERING\");",
			"\tthis.logger.debug(this.type, func, \"${7:varName}: \" + ${7:varName});",
			"\tthis.logger.debug(this.type, func, \"${10:varName}: \" + ${10:varName});",
			"\tthis.logger.debug(this.type, func, \"${13:varName}: \" + ${13:varName});",
			"\tthis.logger.debug(this.type, func, \"${16:varName}: \" + ${16:varName});",
			"\t",
			"\t/** @type {${2:TYPE}} */",
			"\tvar res;",
			"\t",
			"\ttry{",
			"\t\tif(!${7:varName}) throw new Error(\"Required parameter: '${7:varName}' is missing\");",
			"\t\tif(!${10:varName}) throw new Error(\"Required parameter: '${10:varName}' is missing\");",
			"\t\tif(!${13:varName}) throw new Error(\"Required parameter: '${13:varName}' is missing\");",
			"\t\tif(!${16:varName}) throw new Error(\"Required parameter: '${16:varName}' is missing\");",
			"\t\t",
			"\t\t$0",
			"\t",
			"\t} catch(e){",
			"\t\tthis.logger.reportException(this.type, func, e);",
			"\t\tres = null;",
			"\t} finally {",
			"\t\tthis.logger.info(this.type, func, \"LEAVING\");",
			"\t}",
			"\t",
			"\treturn res;",
			"},"
		]
	},
	"Setup Initialize Function with Yansa Logger": {
		"scope": "typescript",
		"prefix": "yalaClassInitFunc",
		"description": "Stub in the logger and logging components of the initialize function.",
		"body": [
			"initialize: function(logger){",
			"\tvar func = \"initialize\";",
			"\tif(!logger){",
			"\t\tthis.logger = new ${1:x_yala_kickstarter}.SNICHLogger();",
			"\t} else {",
			"\t\tthis.logger = logger;",
			"\t}",
			"\t",
			"\tthis.logger.info(this.type, func, \"ENTERING\");",
			"\t",
			"\t$0",
			"\t",
			"\tthis.logger.info(this.type, func, \"LEAVING\");",
			"},"
		]
	}
}